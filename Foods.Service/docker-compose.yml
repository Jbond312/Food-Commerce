version: '2'

services:
  foodsservice:
    image: foodsservice
    container_name: foodsservice
    ports:
     - 8080:80
    extra_hosts:
     - mongo:10.203.18.20
     - mysql:10.203.18.20
    build:
      context: ./Foods.Service.Api
      dockerfile: Dockerfile
    depends_on:
     - "mongo"
     - "mysql"
  mongoreadyroll:
    image: mongoreadyroll
    container_name: mongoreadyroll
    extra_hosts:
     - mongo:10.203.18.20
    build:
      context: ../MongoReadyRoll
      dockerfile: Dockerfile
    depends_on:
     - "mongo"
  mongo:
    image: mongo:3.6.4
    container_name: mongofoods
    hostname: mongo
    ports:
     - 32770:27017
  mysql:
    image: mysql:5.7
    container_name: mysqlfoods
    hostname: mysql
    ports:
     - 32771:3306
    environment:
    - MYSQL_ROOT_PASSWORD=root
    - MYSQL_DATABASE=foodsidentity
    - MYSQL_USER=developer
    - MYSQL_PASSWORD=root
  systemsettingsservice:
    image: systemsettingsservice
    container_name: systemsettingsservice
    ports:
     - 32772:80
    extra_hosts:
     - mongo:10.203.18.20
    build:
      context: ../SystemSetting.Service/SystemSetting.Service.Api
      dockerfile: Dockerfile
    depends_on:
     - "mongo"
  textcontentservice:
    image: textcontentservice
    container_name: textcontentservice
    ports:
     - 32774:80
    extra_hosts:
     - mongo:10.203.18.20
    build:
      context: ../TextContent.Service/TextContent.Service.Api
      dockerfile: Dockerfile
    depends_on:
     - "mongo"
  cooksservice:
    image: cooksservice
    container_name: cooksservice
    ports:
     - 32775:80
    extra_hosts:
     - mongo:10.203.18.20
    build:
      context: ../Cooks.Service/Cooks.Service.Api
      dockerfile: Dockerfile
    depends_on:
     - "mongo"