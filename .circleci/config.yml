version: 2
jobs:
  build:
    working_directory: services
    filters:
      branches:
        only: master     
    docker:
      - image: microsoft/dotnet:latest
    environment:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    steps:
      - checkout
      - run:
          name: Build Info
          command: |
            ls; pwd;
      - run:
          name: Dotnet Restore All Services
          command: |
            dotnet restore Foods.Service/Foods.Service.sln
            dotnet restore MongoReadyRoll/MongoReadyRoll.sln
      - run:
          name: Dotnet Build All Services
          command: |
            dotnet build Foods.Service/Foods.Service.sln
            dotnet build MongoReadyRoll/MongoReadyRoll.sln
      - run:
          name: Dotnet Running Unit Tests
          command: |
            dotnet test Cooks.Service/Cooks.Service.Tests
            dotnet test Users.Service/Users.Service.Tests
            dotnet test Dishes.Service/Dishes.Service.Tests
      - run:
          name: Dotnet Publish All Services
          command: |
            dotnet publish Foods.Service/Foods.Service.sln -c Release -o ./obj/Docker/publish
            dotnet publish MongoReadyRoll/MongoReadyRoll.sln -c Release -o ./obj/Docker/publish
      
#      - setup_remote_docker         
#      
#      - run:
#          name: Install Docker Client
#          command: |
#            set -x
#            VER="17.03.0-ce"
#            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
#            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
#            mv /tmp/docker/* /usr/bin 
#      
#      - run:
#          name: Install Docker Compose
#          command: |
#            set -x
#            curl -L https://github.com/docker/compose/releases/download/1.14.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose
#            chmod +x /usr/local/bin/docker-compose
#            
#      - deploy:
#          name: Build and Load MongoReadyRoll Image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
#            TAG="${CIRCLE_BRANCH}"
#            cd MongoReadyRoll && docker build -t mongoreadyroll:$TAG .
#            ssh-keyscan -H ${LINODE_IP} >> ~/.ssh/known_hosts
#            docker save mongoreadyroll:$TAG | ssh -C ${LINODE_USER}@${LINODE_IP} "docker load;"
#            fi
#      - deploy:
#          name: Build and Deploy Docker Image
#          command: |
#            if [ "${CIRCLE_BRANCH}" == "develop" ]; then
#            TAG="${CIRCLE_BRANCH}"
#            cd Foods.Service/Foods.Service.Api && docker build -t foodsservice:$TAG .
#            ssh-keyscan -H ${LINODE_IP} >> ~/.ssh/known_hosts
#            scp ../circleci_deployer.sh ${LINODE_USER}@${LINODE_IP}:/home/${LINODE_USER}/api/services/circleci_deployer.sh
#            scp ../docker-compose.release.yml ${LINODE_USER}@${LINODE_IP}:/home/${LINODE_USER}/api/services/foods.service/circleci/${CIRCLE_BRANCH}-docker-compose.yml
#            docker save foodsservice:$TAG | ssh -C ${LINODE_USER}@${LINODE_IP} "docker load; cd api/services/foods.service/circleci; ../../circleci_deployer.sh ${CIRCLE_BRANCH} ${LINODE_IP};"
#            fi